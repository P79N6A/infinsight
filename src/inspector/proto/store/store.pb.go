// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inspector/proto/store/store.proto

/*
Package store is a generated protocol buffer package.

It is generated from these files:
	inspector/proto/store/store.proto

It has these top-level messages:
	StoreSaveRequest
	StoreSaveResponse
	StoreQueryRequest
	StoreQueryResponse
*/
package store

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import core "inspector/proto/core"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StoreSaveRequest struct {
	InfoList []*core.Info `protobuf:"bytes,2,rep,name=InfoList" json:"InfoList,omitempty"`
}

func (m *StoreSaveRequest) Reset()                    { *m = StoreSaveRequest{} }
func (m *StoreSaveRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreSaveRequest) ProtoMessage()               {}
func (*StoreSaveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StoreSaveRequest) GetInfoList() []*core.Info {
	if m != nil {
		return m.InfoList
	}
	return nil
}

type StoreSaveResponse struct {
	Error       *core.Error          `protobuf:"bytes,1,opt,name=Error" json:"Error,omitempty"`
	SuccessList []*core.ResponseItem `protobuf:"bytes,2,rep,name=SuccessList" json:"SuccessList,omitempty"`
	FailureList []*core.ResponseItem `protobuf:"bytes,3,rep,name=FailureList" json:"FailureList,omitempty"`
}

func (m *StoreSaveResponse) Reset()                    { *m = StoreSaveResponse{} }
func (m *StoreSaveResponse) String() string            { return proto.CompactTextString(m) }
func (*StoreSaveResponse) ProtoMessage()               {}
func (*StoreSaveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StoreSaveResponse) GetError() *core.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StoreSaveResponse) GetSuccessList() []*core.ResponseItem {
	if m != nil {
		return m.SuccessList
	}
	return nil
}

func (m *StoreSaveResponse) GetFailureList() []*core.ResponseItem {
	if m != nil {
		return m.FailureList
	}
	return nil
}

type StoreQueryRequest struct {
	QueryList []*core.Query `protobuf:"bytes,1,rep,name=QueryList" json:"QueryList,omitempty"`
}

func (m *StoreQueryRequest) Reset()                    { *m = StoreQueryRequest{} }
func (m *StoreQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*StoreQueryRequest) ProtoMessage()               {}
func (*StoreQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StoreQueryRequest) GetQueryList() []*core.Query {
	if m != nil {
		return m.QueryList
	}
	return nil
}

type StoreQueryResponse struct {
	Error       *core.Error       `protobuf:"bytes,1,opt,name=Error" json:"Error,omitempty"`
	SuccessList []*core.InfoRange `protobuf:"bytes,2,rep,name=SuccessList" json:"SuccessList,omitempty"`
	FailureList []*core.InfoRange `protobuf:"bytes,3,rep,name=FailureList" json:"FailureList,omitempty"`
}

func (m *StoreQueryResponse) Reset()                    { *m = StoreQueryResponse{} }
func (m *StoreQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*StoreQueryResponse) ProtoMessage()               {}
func (*StoreQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StoreQueryResponse) GetError() *core.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StoreQueryResponse) GetSuccessList() []*core.InfoRange {
	if m != nil {
		return m.SuccessList
	}
	return nil
}

func (m *StoreQueryResponse) GetFailureList() []*core.InfoRange {
	if m != nil {
		return m.FailureList
	}
	return nil
}

func init() {
	proto.RegisterType((*StoreSaveRequest)(nil), "StoreSaveRequest")
	proto.RegisterType((*StoreSaveResponse)(nil), "StoreSaveResponse")
	proto.RegisterType((*StoreQueryRequest)(nil), "StoreQueryRequest")
	proto.RegisterType((*StoreQueryResponse)(nil), "StoreQueryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StoreService service

type StoreServiceClient interface {
	Save(ctx context.Context, in *StoreSaveRequest, opts ...grpc.CallOption) (*StoreSaveResponse, error)
	Query(ctx context.Context, in *StoreQueryRequest, opts ...grpc.CallOption) (*StoreQueryResponse, error)
}

type storeServiceClient struct {
	cc *grpc.ClientConn
}

func NewStoreServiceClient(cc *grpc.ClientConn) StoreServiceClient {
	return &storeServiceClient{cc}
}

func (c *storeServiceClient) Save(ctx context.Context, in *StoreSaveRequest, opts ...grpc.CallOption) (*StoreSaveResponse, error) {
	out := new(StoreSaveResponse)
	err := grpc.Invoke(ctx, "/StoreService/Save", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) Query(ctx context.Context, in *StoreQueryRequest, opts ...grpc.CallOption) (*StoreQueryResponse, error) {
	out := new(StoreQueryResponse)
	err := grpc.Invoke(ctx, "/StoreService/Query", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StoreService service

type StoreServiceServer interface {
	Save(context.Context, *StoreSaveRequest) (*StoreSaveResponse, error)
	Query(context.Context, *StoreQueryRequest) (*StoreQueryResponse, error)
}

func RegisterStoreServiceServer(s *grpc.Server, srv StoreServiceServer) {
	s.RegisterService(&_StoreService_serviceDesc, srv)
}

func _StoreService_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreService/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).Save(ctx, req.(*StoreSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StoreService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).Query(ctx, req.(*StoreQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StoreService",
	HandlerType: (*StoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _StoreService_Save_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _StoreService_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspector/proto/store/store.proto",
}

func init() { proto.RegisterFile("inspector/proto/store/store.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x89, 0x73, 0x45, 0x4f, 0x15, 0x5c, 0xbc, 0x19, 0x45, 0x70, 0x2b, 0x5e, 0xec, 0x62,
	0xa6, 0x52, 0xf1, 0xc2, 0x07, 0x50, 0x18, 0x78, 0x63, 0xfb, 0x04, 0x35, 0x1c, 0xa5, 0xa0, 0x4d,
	0x3d, 0x49, 0x07, 0xbe, 0x84, 0x37, 0xbe, 0xb0, 0x24, 0xd9, 0x66, 0xb6, 0xf5, 0xc2, 0x9b, 0x42,
	0xfe, 0xf3, 0xfd, 0x87, 0xfe, 0x7f, 0x02, 0xd3, 0xba, 0xd1, 0x2d, 0x4a, 0xa3, 0x28, 0x6b, 0x49,
	0x19, 0x95, 0x69, 0xa3, 0x08, 0xfd, 0x57, 0x38, 0x25, 0xb9, 0xdc, 0x45, 0xa4, 0x25, 0xe4, 0x06,
	0x48, 0xef, 0xe0, 0xac, 0xb4, 0x7c, 0x59, 0x2d, 0xb1, 0xc0, 0xcf, 0x0e, 0xb5, 0xe1, 0x53, 0x38,
	0x5a, 0x34, 0xaf, 0xea, 0xa9, 0xd6, 0x66, 0x7c, 0x30, 0x19, 0xcc, 0xe2, 0x7c, 0x28, 0xac, 0x50,
	0x6c, 0xe4, 0xf4, 0x87, 0xc1, 0x28, 0xf0, 0xe9, 0x56, 0x35, 0x1a, 0xf9, 0x05, 0x0c, 0x1f, 0x88,
	0x14, 0x8d, 0xd9, 0x84, 0xcd, 0xe2, 0x3c, 0x12, 0xee, 0x54, 0x78, 0x91, 0x67, 0x10, 0x97, 0x9d,
	0x94, 0xa8, 0x75, 0xb0, 0xf9, 0x54, 0xac, 0xdd, 0x0b, 0x83, 0x1f, 0x45, 0x48, 0x58, 0xc3, 0x63,
	0x55, 0xbf, 0x77, 0x84, 0xce, 0x30, 0xe8, 0x35, 0x04, 0x44, 0x7a, 0xbf, 0xfa, 0xa9, 0xe7, 0x0e,
	0xe9, 0x6b, 0x9d, 0xe6, 0x0a, 0x8e, 0xdd, 0xd9, 0xed, 0x60, 0x6e, 0x47, 0x24, 0x3c, 0xf1, 0x37,
	0x48, 0xbf, 0x19, 0xf0, 0xd0, 0xfb, 0xaf, 0x44, 0xf3, 0xbe, 0x44, 0xe0, 0xbb, 0xaa, 0x9a, 0x37,
	0xdc, 0x8e, 0x33, 0xef, 0x8b, 0xb3, 0x45, 0x07, 0xe3, 0x5c, 0xc1, 0x89, 0x2f, 0x18, 0x69, 0x59,
	0x4b, 0xe4, 0xd7, 0x70, 0x68, 0xbb, 0xe6, 0x23, 0xb1, 0x7b, 0x5f, 0x09, 0x17, 0xfb, 0x57, 0x71,
	0x03, 0x43, 0x97, 0x84, 0xaf, 0x86, 0x61, 0x25, 0xc9, 0xb9, 0xd8, 0x8f, 0xfa, 0x12, 0xb9, 0x07,
	0x71, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x78, 0x01, 0x55, 0x6a, 0x56, 0x02, 0x00, 0x00,
}
